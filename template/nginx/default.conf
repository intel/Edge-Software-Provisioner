# Copyright (C) 2019 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause

# This will be run as a Docker container and will be responsible for
# serving out profile files, kernel and initrd images, and anything
# else needed. Everything stored in a profile's git repository will be
# hosted over the local area network, and clients that are attempting
# to PXE boot will reach out to this nginx server.
server {
    listen 80 default_server;

    # Files will be served from this location.
    # Nginx runs as a container in docker-compose.yml
    # and this folder is mounted to this directory:
    # ./data/usr/share/nginx/html:/usr/share/nginx/html
    root /usr/share/nginx/html;
    index index.html;
    server_name _;

    # Deny access to any and all directories named ".git" recursively.
    # This is needed because profiles will be using git, and this directory 
    # can contain credentials and other sensitive information.
    location ~ /\.git {
        deny all;
    }

    # This directive tells nginx to try to serve out the requested file/folder,
    # and serve out 404 if it can't find it.
    location / {
        try_files $uri $uri/ =404;
        autoindex on;
        autoindex_exact_size off;
    }

    # Each profile will have its files stored under this directory
    # in the format /files/${profileName}/. The autoindex directive tells
    # nginx to provide a convenient HTML page showing the files and subfolders
    # when navigating to a folder
    location /files {
        autoindex on;
    }

    # Each profile will be served out under the
    # /profile/${profileName} directory. The autoindex directive tells
    # nginx to provide a convenient HTML page showing the files and subfolders
    # when navigating to a folder
    location /profile {
        autoindex on;
    }

    # Lets Encrypt Challenge request
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
    listen 443 ssl;
    server_name edgebuilder.local;

    ssl_certificate /etc/ssl/cert/EB_web.crt;
    ssl_certificate_key /etc/ssl/private/EB_web.key;

    include /etc/nginx/conf.d/options-ssl-nginx.conf;
    ssl_dhparam /etc/nginx/ssl-dhparams.pem;
    
    location / {
        proxy_pass http://localhost; #for demo purposes
    }
}
